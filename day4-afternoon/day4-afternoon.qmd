---
title: "QBB2024-JHU - Day 4 (Linear Regression)"
author: "Javier Carpinteyro Ponce"
format: html
editor: visual
code-annotations: hover
date: 07/16/2024
editor_options: 
  chunk_output_type: console
toc: true
self-contained: true
---

## Linear Regression using R

```{r}
#| warning: false
#| echo: true

library(tidyverse)

iris_setosa <- iris %>% 
  filter(Species == "setosa")
head(iris_setosa)
ggplot(data = iris_setosa, mapping = aes(x = Sepal.Width, y = Sepal.Length)) +
  geom_point() + 
  stat_smooth(method = "lm")
  

model <- lm(data = iris_setosa,formula = "Sepal.Length ~ 1 + Sepal.Width")

summary(model)



```

## Working with the penguins data set

```{r}
#| warning: false
#| echo: true

library(palmerpenguins)
library(broom)

head(penguins)
glimpse(penguins)

# is there a relationship between bill length and depth

# this interpretation is not correct
lm(data = penguins,
   formula = bill_length_mm ~ 1 + bill_depth_mm) %>%
  summary()

# plot and color by species and fit a linear model for each species data
ggplot(data = penguins, 
       mapping = aes(x = bill_depth_mm,y = bill_length_mm,color = species)) +
  geom_point() +
  stat_smooth(method = "lm")
# plot and color by species and fit a linear data for the data as a whole
ggplot(data = penguins, 
       mapping = aes(x = bill_depth_mm,y = bill_length_mm)) +
  geom_point(aes(color = species)) +
  stat_smooth(method = "lm")

# Do it by species
lm(data = penguins %>% filter(species == "Adelie"),
   formula = bill_length_mm ~ 1 + bill_depth_mm) %>%
  summary()

# consider all species together
full_model <- lm(data = penguins,
   formula = bill_length_mm ~ 1 + bill_depth_mm + species)
summary(full_model)

reduced_model <- lm(data = penguins,
                    formula = bill_length_mm ~ 1, bill_depth_mm)
# to test a more general question
anova(full_model, reduced_model)

# consider all species together considering interactions of the predictor variables
lm(data = penguins,
   formula = bill_length_mm ~ 1 + bill_depth_mm * species) %>%
  summary()


# consider all species together and sex
full_model_species <- lm(data = penguins %>% filter(!is.na(sex)),
   formula = bill_length_mm ~ 1 + bill_depth_mm + species)
summary(full_model_species)
full_model_species_sex <- lm(data = penguins %>% filter(!is.na(sex)),
   formula = bill_length_mm ~ 1 + bill_depth_mm + species + sex)
summary(full_model_species_sex)
#anova(full_model_species_sex,full_model_species)

# what is the predicted bill length of a male Gentoo
# penguin with a bill depth of 17.5 mm?

# y = b_0 + b_1*x_1 + b_2*x_2 + b_3*x_3 + b_4*x_4

27.6224 + 0.5317*(17.5) + 9.9709*(0) + 10.4890*(1) + 2.8938*(2)

new_penguin <- tibble(
  species = "Gentoo",
  bill_depth_mm = 17.5,
  sex = "male"
)

predict(full_model_species_sex, newdata = new_penguin)

```

## Afternoon exercises on linear models

### Part 1

```{r}
#| warning: false
#| echo: true

# Step 1.1
dnm <- read_csv(file = "aau1043_dnm.csv")
head(dnm)
# count the number of individuals
length(unique(dnm$Proband_id))

ages <- read_csv(file = "aau1043_parental_age.csv")
head(ages)

# Step 1.2

dnm_summary <- dnm %>%
  group_by(Proband_id) %>%
  summarize(n_paternal_dnm = sum(Phase_combined == "father", na.rm = TRUE),
            n_maternal_dnm = sum(Phase_combined == "mother", na.rm = TRUE))
head(dnm_summary)

# Step 1.4
dnm_by_parental_age <- left_join(dnm_summary, ages, by = "Proband_id")
head(dnm_by_parental_age)

```

### Part 2

```{r}
#| warning: false
#| echo: true

# Step 2.1

# plot maternal de novo mutations vs. maternal age
ggplot(data = dnm_by_parental_age, 
       mapping = aes(x = Mother_age,y = n_maternal_dnm)) +
  geom_point() +
  stat_smooth(method = "lm")
# plot paternal de novo mutations vs. paternal age
ggplot(data = dnm_by_parental_age, 
       mapping = aes(x = Father_age,y = n_paternal_dnm)) +
  geom_point() +
  stat_smooth(method = "lm")

# Step 2.2

# Test the relationship for maternal mutations
model_maternal <- lm(data = dnm_by_parental_age,
   formula = n_maternal_dnm ~ 1 + Mother_age)
summary(model_maternal)

# Step 2.3

# Test the relationship for maternal mutations
model_paternal <- lm(data = dnm_by_parental_age,
   formula = n_paternal_dnm ~ 1 + Father_age)
summary(model_paternal)

# Step 2.4

# create new data
new_paternal <- tibble(
  Proband_id = "0001",
  Father_age = 50.5
)

predict(model_paternal, newdata = new_paternal)

# Step 2.5

ggplot() + 
  geom_histogram(data = dnm_by_parental_age, mapping = aes(x = n_paternal_dnm, fill = "paternal"),alpha = 0.5) +
  geom_histogram(data = dnm_by_parental_age, mapping = aes(x = n_maternal_dnm, fill = "maternal" ), alpha = 0.5) +
  scale_fill_manual(values = c("blue", "red"))
```
